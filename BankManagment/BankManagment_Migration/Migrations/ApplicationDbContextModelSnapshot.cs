// <auto-generated />
using System;
using BankManagment_Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankManagment_Migration.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BankManagment_Domain.Entity.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81d80448-889d-4091-926a-bf75f40de06a"),
                            Name = "Liability"
                        },
                        new
                        {
                            Id = new Guid("5ff8edd6-cf7b-457d-b8ed-afce059b55c7"),
                            Name = "Asset"
                        });
                });

            modelBuilder.Entity("BankManagment_Domain.Entity.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20d3d291-4510-4c14-826c-76161b68658f"),
                            AccountNumber = "62811879",
                            AccountTypeId = new Guid("81d80448-889d-4091-926a-bf75f40de06a"),
                            FirstName = "Akash",
                            LastName = "Rana",
                            OpeningDate = new DateTime(2024, 2, 5, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5494)
                        },
                        new
                        {
                            Id = new Guid("70e6fb04-786f-423e-887d-4cb034d94a4e"),
                            AccountNumber = "62762801",
                            AccountTypeId = new Guid("5ff8edd6-cf7b-457d-b8ed-afce059b55c7"),
                            FirstName = "Akash",
                            LastName = "Rana",
                            OpeningDate = new DateTime(2024, 2, 4, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5514)
                        },
                        new
                        {
                            Id = new Guid("33a8604c-b943-47f2-bb3f-571ebc217243"),
                            AccountNumber = "92412811",
                            AccountTypeId = new Guid("81d80448-889d-4091-926a-bf75f40de06a"),
                            FirstName = "Akash",
                            LastName = "Rana",
                            OpeningDate = new DateTime(2024, 2, 3, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5517)
                        },
                        new
                        {
                            Id = new Guid("b88d6232-856b-4fe8-9943-2e93227d2903"),
                            AccountNumber = "72944215",
                            AccountTypeId = new Guid("81d80448-889d-4091-926a-bf75f40de06a"),
                            FirstName = "Akash",
                            LastName = "Rana",
                            OpeningDate = new DateTime(2024, 2, 2, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5522)
                        },
                        new
                        {
                            Id = new Guid("57dba9c8-c7ed-4d23-b40f-3d6ffef4c718"),
                            AccountNumber = "93068980",
                            AccountTypeId = new Guid("81d80448-889d-4091-926a-bf75f40de06a"),
                            FirstName = "Akash",
                            LastName = "Rana",
                            OpeningDate = new DateTime(2024, 2, 1, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5525)
                        });
                });

            modelBuilder.Entity("BankManagment_Domain.Entity.BankTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionPersonFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPersonLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPersonMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountID");

                    b.HasIndex("PaymentMethodID");

                    b.ToTable("BankTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8706e253-6fb9-4aaf-9a8c-06230b025a76"),
                            Amount = 180.135361754793000m,
                            BankAccountID = new Guid("33a8604c-b943-47f2-bb3f-571ebc217243"),
                            Category = "Bank Charges",
                            PaymentMethodID = new Guid("c52b16e2-748c-4058-80b7-439744846f4b"),
                            TransactionDate = new DateTime(2024, 2, 5, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5665),
                            TransactionPersonFirstName = "Akash",
                            TransactionPersonLastName = "Rana",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("7220200c-f8b5-406b-af0c-57759b1d2c27"),
                            Amount = 651.025806069377000m,
                            BankAccountID = new Guid("57dba9c8-c7ed-4d23-b40f-3d6ffef4c718"),
                            Category = "Bank Interest",
                            PaymentMethodID = new Guid("c52b16e2-748c-4058-80b7-439744846f4b"),
                            TransactionDate = new DateTime(2024, 2, 4, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5670),
                            TransactionPersonFirstName = "Akash",
                            TransactionPersonLastName = "Rana",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("60007847-0969-4a0c-a5e2-f759d523eb0c"),
                            Amount = 10.4129740680303000m,
                            BankAccountID = new Guid("57dba9c8-c7ed-4d23-b40f-3d6ffef4c718"),
                            Category = "Bank Interest",
                            PaymentMethodID = new Guid("557554ed-c3d5-4788-82c8-13c1763733b7"),
                            TransactionDate = new DateTime(2024, 2, 3, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5676),
                            TransactionPersonFirstName = "Akash",
                            TransactionPersonLastName = "Rana",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("560847ff-6f5b-4209-a7a8-c1b0c3ce6922"),
                            Amount = 887.781450078504000m,
                            BankAccountID = new Guid("b88d6232-856b-4fe8-9943-2e93227d2903"),
                            Category = "Bank Interest",
                            PaymentMethodID = new Guid("8a51ce61-3e24-4fdc-9723-f880618bb1b1"),
                            TransactionDate = new DateTime(2024, 2, 2, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5679),
                            TransactionPersonFirstName = "Akash",
                            TransactionPersonLastName = "Rana",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("0ce2f033-0687-4e74-9da9-8ff8adefe545"),
                            Amount = 440.55853118899000m,
                            BankAccountID = new Guid("b88d6232-856b-4fe8-9943-2e93227d2903"),
                            Category = "Bank Interest",
                            PaymentMethodID = new Guid("557554ed-c3d5-4788-82c8-13c1763733b7"),
                            TransactionDate = new DateTime(2024, 2, 1, 17, 45, 19, 777, DateTimeKind.Local).AddTicks(5682),
                            TransactionPersonFirstName = "Akash",
                            TransactionPersonLastName = "Rana",
                            TransactionType = "Credit"
                        });
                });

            modelBuilder.Entity("BankManagment_Domain.Entity.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a51ce61-3e24-4fdc-9723-f880618bb1b1"),
                            Name = "Cash"
                        },
                        new
                        {
                            Id = new Guid("5985ddc8-4579-40f2-945b-6c1fd9aa486e"),
                            Name = "Cheque"
                        },
                        new
                        {
                            Id = new Guid("557554ed-c3d5-4788-82c8-13c1763733b7"),
                            Name = "NEFT"
                        },
                        new
                        {
                            Id = new Guid("d1eac9cd-00f3-4859-8e62-6563573fb473"),
                            Name = "RTGS"
                        },
                        new
                        {
                            Id = new Guid("c52b16e2-748c-4058-80b7-439744846f4b"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("BankManagment_Domain.Entity.BankAccount", b =>
                {
                    b.HasOne("BankManagment_Domain.Entity.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("BankManagment_Domain.Entity.BankTransaction", b =>
                {
                    b.HasOne("BankManagment_Domain.Entity.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankManagment_Domain.Entity.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("PaymentMethod");
                });
#pragma warning restore 612, 618
        }
    }
}
